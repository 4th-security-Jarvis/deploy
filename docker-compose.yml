services:
  # 1) Teleport daemon (followed the user's example run command)
  teleport-daemon:
    container_name: teleport-daemon
    image: public.ecr.aws/gravitational/teleport-distroless-debug:17.5.4
    networks:
      - teleport-net
    volumes:
      - ./teleport-daemon/config:/etc/teleport
      - ./teleport-daemon/data:/var/lib/teleport
    ports:
      - "3025:3025"
      - "3080:3080"
    entrypoint: [ "teleport", "start", "--config=/etc/teleport/teleport.yaml" ]

  # 2) Backend - build from repo and run (uses the provided Dockerfile)
  backend:
    container_name: backend
    build:
      context: ./4th-security-Jarvis-BE
      dockerfile: Dockerfile
    image: backend:latest
    depends_on:
      - teleport-daemon
    networks:
      - teleport-net
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - tbot-certs-volume:/opt/machine-id
      - ./teleport-daemon/config:/opt

  # 3) Frontend - multi-stage build (build then serve with nginx)
  frontend:
    container_name: frontend
    build:
      context: ./4th-security-Jarvis-FE
      dockerfile: Dockerfile
    image: frontend:latest
    depends_on:
      - backend
    networks:
      - teleport-net
    ports:
      - "3000:3000"

  # 4) ELK stack and event handler
  elasticsearch:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - teleport-net
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.18.1
    volumes:
      - ./event-listen/logstash/config:/usr/share/logstash/config
      - ./event-listen/logstash/pipeline:/usr/share/logstash/pipeline
      - ./event-listen/plugin:/home
    networks:
      - teleport-net
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.18.1
    ports:
      - "5601:5601"
    volumes:
      - ./event-listen/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - teleport-net
    depends_on:
      - elasticsearch

  tp-event-handler:
    container_name: handler
    image: public.ecr.aws/gravitational/teleport-plugin-event-handler:17.7.1
    volumes:
      - ./event-listen/plugin:/opt/teleport-plugin
      - tbot-certs-volume:/opt/teleport-plugin/identity:ro
    working_dir: /opt/teleport-plugin
    networks:
      - teleport-net
    depends_on:
      - logstash
    command: [ "start", "--config=teleport-event-handler.toml" ]

volumes:
  esdata:
  tbot-certs-volume:


networks:
  teleport-net:
    driver: bridge
